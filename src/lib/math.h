#ifndef GUARD_GBA_MATH_H
#define GUARD_GBA_MATH_H

#include "gba_types.h"

int abs(int a){
    if (a >= 0)
        return a;
    return (-a);
}

// Converts a number to Q4.12 fixed-point format
#define Q_4_12(n)        ((s16)((n) * 4096))

// values of sin(x) as Q4.12 fixed-point numbers from x = 0° to x = 179°
const s16 gSineDegreeTable[] = {
    Q_4_12(0),              // sin(0°)
    Q_4_12(0.017333984375), // sin(1°)
    Q_4_12(0.034912109375), // sin(2°)
    Q_4_12(0.05224609375),  // sin(3°)
    Q_4_12(0.06982421875),  // sin(4°)
    Q_4_12(0.087158203125), // sin(5°)
    Q_4_12(0.1044921875),   // sin(6°)
    Q_4_12(0.121826171875), // sin(7°)
    Q_4_12(0.13916015625),  // sin(8°)
    Q_4_12(0.156494140625), // sin(9°)
    Q_4_12(0.173583984375), // sin(10°)
    Q_4_12(0.19091796875),  // sin(11°)
    Q_4_12(0.2080078125),   // sin(12°)
    Q_4_12(0.224853515625), // sin(13°)
    Q_4_12(0.241943359375), // sin(14°)
    Q_4_12(0.2587890625),   // sin(15°)
    Q_4_12(0.275634765625), // sin(16°)
    Q_4_12(0.29248046875),  // sin(17°)
    Q_4_12(0.30908203125),  // sin(18°)
    Q_4_12(0.32568359375),  // sin(19°)
    Q_4_12(0.342041015625), // sin(20°)
    Q_4_12(0.3583984375),   // sin(21°)
    Q_4_12(0.37451171875),  // sin(22°)
    Q_4_12(0.390625),       // sin(23°)
    Q_4_12(0.40673828125),  // sin(24°)
    Q_4_12(0.422607421875), // sin(25°)
    Q_4_12(0.4384765625),   // sin(26°)
    Q_4_12(0.4541015625),   // sin(27°)
    Q_4_12(0.469482421875), // sin(28°)
    Q_4_12(0.48486328125),  // sin(29°)
    Q_4_12(0.5),            // sin(30°)
    Q_4_12(0.51513671875),  // sin(31°)
    Q_4_12(0.530029296875), // sin(32°)
    Q_4_12(0.544677734375), // sin(33°)
    Q_4_12(0.55908203125),  // sin(34°)
    Q_4_12(0.573486328125), // sin(35°)
    Q_4_12(0.587890625),    // sin(36°)
    Q_4_12(0.601806640625), // sin(37°)
    Q_4_12(0.61572265625),  // sin(38°)
    Q_4_12(0.62939453125),  // sin(39°)
    Q_4_12(0.642822265625), // sin(40°)
    Q_4_12(0.656005859375), // sin(41°)
    Q_4_12(0.669189453125), // sin(42°)
    Q_4_12(0.681884765625), // sin(43°)
    Q_4_12(0.694580078125), // sin(44°)
    Q_4_12(0.70703125),     // sin(45°)
    Q_4_12(0.71923828125),  // sin(46°)
    Q_4_12(0.7314453125),   // sin(47°)
    Q_4_12(0.7431640625),   // sin(48°)
    Q_4_12(0.754638671875), // sin(49°)
    Q_4_12(0.76611328125),  // sin(50°)
    Q_4_12(0.777099609375), // sin(51°)
    Q_4_12(0.7880859375),   // sin(52°)
    Q_4_12(0.798583984375), // sin(53°)
    Q_4_12(0.80908203125),  // sin(54°)
    Q_4_12(0.819091796875), // sin(55°)
    Q_4_12(0.8291015625),   // sin(56°)
    Q_4_12(0.838623046875), // sin(57°)
    Q_4_12(0.84814453125),  // sin(58°)
    Q_4_12(0.857177734375), // sin(59°)
    Q_4_12(0.865966796875), // sin(60°)
    Q_4_12(0.87451171875),  // sin(61°)
    Q_4_12(0.883056640625), // sin(62°)
    Q_4_12(0.89111328125),  // sin(63°)
    Q_4_12(0.898681640625), // sin(64°)
    Q_4_12(0.90625),        // sin(65°)
    Q_4_12(0.91357421875),  // sin(66°)
    Q_4_12(0.92041015625),  // sin(67°)
    Q_4_12(0.92724609375),  // sin(68°)
    Q_4_12(0.93359375),     // sin(69°)
    Q_4_12(0.939697265625), // sin(70°)
    Q_4_12(0.945556640625), // sin(71°)
    Q_4_12(0.951171875),    // sin(72°)
    Q_4_12(0.956298828125), // sin(73°)
    Q_4_12(0.961181640625), // sin(74°)
    Q_4_12(0.9658203125),   // sin(75°)
    Q_4_12(0.97021484375),  // sin(76°)
    Q_4_12(0.974365234375), // sin(77°)
    Q_4_12(0.97802734375),  // sin(78°)
    Q_4_12(0.981689453125), // sin(79°)
    Q_4_12(0.98486328125),  // sin(80°)
    Q_4_12(0.98779296875),  // sin(81°)
    Q_4_12(0.990234375),    // sin(82°)
    Q_4_12(0.992431640625), // sin(83°)
    Q_4_12(0.994384765625), // sin(84°)
    Q_4_12(0.99609375),     // sin(85°)
    Q_4_12(0.99755859375),  // sin(86°)
    Q_4_12(0.99853515625),  // sin(87°)
    Q_4_12(0.999267578125), // sin(88°)
    Q_4_12(0.999755859375), // sin(89°)
    Q_4_12(1),              // sin(90°)
    Q_4_12(0.999755859375), // sin(91°)
    Q_4_12(0.999267578125), // sin(92°)
    Q_4_12(0.99853515625),  // sin(93°)
    Q_4_12(0.99755859375),  // sin(94°)
    Q_4_12(0.99609375),     // sin(95°)
    Q_4_12(0.994384765625), // sin(96°)
    Q_4_12(0.992431640625), // sin(97°)
    Q_4_12(0.990234375),    // sin(98°)
    Q_4_12(0.98779296875),  // sin(99°)
    Q_4_12(0.98486328125),  // sin(100°)
    Q_4_12(0.981689453125), // sin(101°)
    Q_4_12(0.97802734375),  // sin(102°)
    Q_4_12(0.974365234375), // sin(103°)
    Q_4_12(0.97021484375),  // sin(104°)
    Q_4_12(0.9658203125),   // sin(105°)
    Q_4_12(0.961181640625), // sin(106°)
    Q_4_12(0.956298828125), // sin(107°)
    Q_4_12(0.951171875),    // sin(108°)
    Q_4_12(0.945556640625), // sin(109°)
    Q_4_12(0.939697265625), // sin(110°)
    Q_4_12(0.93359375),     // sin(111°)
    Q_4_12(0.92724609375),  // sin(112°)
    Q_4_12(0.92041015625),  // sin(113°)
    Q_4_12(0.91357421875),  // sin(114°)
    Q_4_12(0.90625),        // sin(115°)
    Q_4_12(0.898681640625), // sin(116°)
    Q_4_12(0.89111328125),  // sin(117°)
    Q_4_12(0.883056640625), // sin(118°)
    Q_4_12(0.87451171875),  // sin(119°)
    Q_4_12(0.865966796875), // sin(120°)
    Q_4_12(0.857177734375), // sin(121°)
    Q_4_12(0.84814453125),  // sin(122°)
    Q_4_12(0.838623046875), // sin(123°)
    Q_4_12(0.8291015625),   // sin(124°)
    Q_4_12(0.819091796875), // sin(125°)
    Q_4_12(0.80908203125),  // sin(126°)
    Q_4_12(0.798583984375), // sin(127°)
    Q_4_12(0.7880859375),   // sin(128°)
    Q_4_12(0.777099609375), // sin(129°)
    Q_4_12(0.76611328125),  // sin(130°)
    Q_4_12(0.754638671875), // sin(131°)
    Q_4_12(0.7431640625),   // sin(132°)
    Q_4_12(0.7314453125),   // sin(133°)
    Q_4_12(0.71923828125),  // sin(134°)
    Q_4_12(0.70703125),     // sin(135°)
    Q_4_12(0.694580078125), // sin(136°)
    Q_4_12(0.681884765625), // sin(137°)
    Q_4_12(0.669189453125), // sin(138°)
    Q_4_12(0.656005859375), // sin(139°)
    Q_4_12(0.642822265625), // sin(140°)
    Q_4_12(0.62939453125),  // sin(141°)
    Q_4_12(0.61572265625),  // sin(142°)
    Q_4_12(0.601806640625), // sin(143°)
    Q_4_12(0.587890625),    // sin(144°)
    Q_4_12(0.573486328125), // sin(145°)
    Q_4_12(0.55908203125),  // sin(146°)
    Q_4_12(0.544677734375), // sin(147°)
    Q_4_12(0.530029296875), // sin(148°)
    Q_4_12(0.51513671875),  // sin(149°)
    Q_4_12(0.5),            // sin(150°)
    Q_4_12(0.48486328125),  // sin(151°)
    Q_4_12(0.469482421875), // sin(152°)
    Q_4_12(0.4541015625),   // sin(153°)
    Q_4_12(0.4384765625),   // sin(154°)
    Q_4_12(0.422607421875), // sin(155°)
    Q_4_12(0.40673828125),  // sin(156°)
    Q_4_12(0.390625),       // sin(157°)
    Q_4_12(0.37451171875),  // sin(158°)
    Q_4_12(0.3583984375),   // sin(159°)
    Q_4_12(0.342041015625), // sin(160°)
    Q_4_12(0.32568359375),  // sin(161°)
    Q_4_12(0.30908203125),  // sin(162°)
    Q_4_12(0.29248046875),  // sin(163°)
    Q_4_12(0.275634765625), // sin(164°)
    Q_4_12(0.2587890625),   // sin(165°)
    Q_4_12(0.241943359375), // sin(166°)
    Q_4_12(0.224853515625), // sin(167°)
    Q_4_12(0.2080078125),   // sin(168°)
    Q_4_12(0.19091796875),  // sin(169°)
    Q_4_12(0.173583984375), // sin(170°)
    Q_4_12(0.156494140625), // sin(171°)
    Q_4_12(0.13916015625),  // sin(172°)
    Q_4_12(0.121826171875), // sin(173°)
    Q_4_12(0.1044921875),   // sin(174°)
    Q_4_12(0.087158203125), // sin(175°)
    Q_4_12(0.06982421875),  // sin(176°)
    Q_4_12(0.05224609375),  // sin(177°)
    Q_4_12(0.034912109375), // sin(178°)
    Q_4_12(0.017333984375), // sin(179°)
};

// angle in degrees
s16 Sin2(u16 angle){
    s32 angleMod = angle % 180;
    s32 negate = ((angle / 180) & 1);
    s16 value = gSineDegreeTable[angleMod];

    if (negate)
        return -value;
    else
        return value;
}

s16 Cos2(u16 angle){
    return Sin2(angle + 90);
}

#endif // GUARD_GBA_MATH_H