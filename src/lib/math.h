#ifndef GUARD_GBA_MATH_H
#define GUARD_GBA_MATH_H

#include "gba_types.h"

int abs(int a){
    if (a >= 0)
        return a;
    return (-a);
}

// values of sin(x) as Q4.12 fixed-point numbers from x = 0° to x = 179°
const float gSineDegreeTable[] = {
    0,              // sin(0°)
    0.017333984375, // sin(1°)
    0.034912109375, // sin(2°)
    0.05224609375,  // sin(3°)
    0.06982421875,  // sin(4°)
    0.087158203125, // sin(5°)
    0.1044921875,   // sin(6°)
    0.121826171875, // sin(7°)
    0.13916015625,  // sin(8°)
    0.156494140625, // sin(9°)
    0.173583984375, // sin(10°)
    0.19091796875,  // sin(11°)
    0.2080078125,   // sin(12°)
    0.224853515625, // sin(13°)
    0.241943359375, // sin(14°)
    0.2587890625,   // sin(15°)
    0.275634765625, // sin(16°)
    0.29248046875,  // sin(17°)
    0.30908203125,  // sin(18°)
    0.32568359375,  // sin(19°)
    0.342041015625, // sin(20°)
    0.3583984375,   // sin(21°)
    0.37451171875,  // sin(22°)
    0.390625,       // sin(23°)
    0.40673828125,  // sin(24°)
    0.422607421875, // sin(25°)
    0.4384765625,   // sin(26°)
    0.4541015625,   // sin(27°)
    0.469482421875, // sin(28°)
    0.48486328125,  // sin(29°)
    0.5,            // sin(30°)
    0.51513671875,  // sin(31°)
    0.530029296875, // sin(32°)
    0.544677734375, // sin(33°)
    0.55908203125,  // sin(34°)
    0.573486328125, // sin(35°)
    0.587890625,    // sin(36°)
    0.601806640625, // sin(37°)
    0.61572265625,  // sin(38°)
    0.62939453125,  // sin(39°)
    0.642822265625, // sin(40°)
    0.656005859375, // sin(41°)
    0.669189453125, // sin(42°)
    0.681884765625, // sin(43°)
    0.694580078125, // sin(44°)
    0.70703125,     // sin(45°)
    0.71923828125,  // sin(46°)
    0.7314453125,   // sin(47°)
    0.7431640625,   // sin(48°)
    0.754638671875, // sin(49°)
    0.76611328125,  // sin(50°)
    0.777099609375, // sin(51°)
    0.7880859375,   // sin(52°)
    0.798583984375, // sin(53°)
    0.80908203125,  // sin(54°)
    0.819091796875, // sin(55°)
    0.8291015625,   // sin(56°)
    0.838623046875, // sin(57°)
    0.84814453125,  // sin(58°)
    0.857177734375, // sin(59°)
    0.865966796875, // sin(60°)
    0.87451171875,  // sin(61°)
    0.883056640625, // sin(62°)
    0.89111328125,  // sin(63°)
    0.898681640625, // sin(64°)
    0.90625,        // sin(65°)
    0.91357421875,  // sin(66°)
    0.92041015625,  // sin(67°)
    0.92724609375,  // sin(68°)
    0.93359375,     // sin(69°)
    0.939697265625, // sin(70°)
    0.945556640625, // sin(71°)
    0.951171875,    // sin(72°)
    0.956298828125, // sin(73°)
    0.961181640625, // sin(74°)
    0.9658203125,   // sin(75°)
    0.97021484375,  // sin(76°)
    0.974365234375, // sin(77°)
    0.97802734375,  // sin(78°)
    0.981689453125, // sin(79°)
    0.98486328125,  // sin(80°)
    0.98779296875,  // sin(81°)
    0.990234375,    // sin(82°)
    0.992431640625, // sin(83°)
    0.994384765625, // sin(84°)
    0.99609375,     // sin(85°)
    0.99755859375,  // sin(86°)
    0.99853515625,  // sin(87°)
    0.999267578125, // sin(88°)
    0.999755859375, // sin(89°)
    1,              // sin(90°)
    0.999755859375, // sin(91°)
    0.999267578125, // sin(92°)
    0.99853515625,  // sin(93°)
    0.99755859375,  // sin(94°)
    0.99609375,     // sin(95°)
    0.994384765625, // sin(96°)
    0.992431640625, // sin(97°)
    0.990234375,    // sin(98°)
    0.98779296875,  // sin(99°)
    0.98486328125,  // sin(100°)
    0.981689453125, // sin(101°)
    0.97802734375,  // sin(102°)
    0.974365234375, // sin(103°)
    0.97021484375,  // sin(104°)
    0.9658203125,   // sin(105°)
    0.961181640625, // sin(106°)
    0.956298828125, // sin(107°)
    0.951171875,    // sin(108°)
    0.945556640625, // sin(109°)
    0.939697265625, // sin(110°)
    0.93359375,     // sin(111°)
    0.92724609375,  // sin(112°)
    0.92041015625,  // sin(113°)
    0.91357421875,  // sin(114°)
    0.90625,        // sin(115°)
    0.898681640625, // sin(116°)
    0.89111328125,  // sin(117°)
    0.883056640625, // sin(118°)
    0.87451171875,  // sin(119°)
    0.865966796875, // sin(120°)
    0.857177734375, // sin(121°)
    0.84814453125,  // sin(122°)
    0.838623046875, // sin(123°)
    0.8291015625,   // sin(124°)
    0.819091796875, // sin(125°)
    0.80908203125,  // sin(126°)
    0.798583984375, // sin(127°)
    0.7880859375,   // sin(128°)
    0.777099609375, // sin(129°)
    0.76611328125,  // sin(130°)
    0.754638671875, // sin(131°)
    0.7431640625,   // sin(132°)
    0.7314453125,   // sin(133°)
    0.71923828125,  // sin(134°)
    0.70703125,     // sin(135°)
    0.694580078125, // sin(136°)
    0.681884765625, // sin(137°)
    0.669189453125, // sin(138°)
    0.656005859375, // sin(139°)
    0.642822265625, // sin(140°)
    0.62939453125,  // sin(141°)
    0.61572265625,  // sin(142°)
    0.601806640625, // sin(143°)
    0.587890625,    // sin(144°)
    0.573486328125, // sin(145°)
    0.55908203125,  // sin(146°)
    0.544677734375, // sin(147°)
    0.530029296875, // sin(148°)
    0.51513671875,  // sin(149°)
    0.5,            // sin(150°)
    0.48486328125,  // sin(151°)
    0.469482421875, // sin(152°)
    0.4541015625,   // sin(153°)
    0.4384765625,   // sin(154°)
    0.422607421875, // sin(155°)
    0.40673828125,  // sin(156°)
    0.390625,       // sin(157°)
    0.37451171875,  // sin(158°)
    0.3583984375,   // sin(159°)
    0.342041015625, // sin(160°)
    0.32568359375,  // sin(161°)
    0.30908203125,  // sin(162°)
    0.29248046875,  // sin(163°)
    0.275634765625, // sin(164°)
    0.2587890625,   // sin(165°)
    0.241943359375, // sin(166°)
    0.224853515625, // sin(167°)
    0.2080078125,   // sin(168°)
    0.19091796875,  // sin(169°)
    0.173583984375, // sin(170°)
    0.156494140625, // sin(171°)
    0.13916015625,  // sin(172°)
    0.121826171875, // sin(173°)
    0.1044921875,   // sin(174°)
    0.087158203125, // sin(175°)
    0.06982421875,  // sin(176°)
    0.05224609375,  // sin(177°)
    0.034912109375, // sin(178°)
    0.017333984375, // sin(179°)
};

// angle in degrees
float Sin2(u16 angle){
    s32 angleMod = angle % 180;
    s32 negate = ((angle / 180) & 1);
    float value = gSineDegreeTable[angleMod];

    if (negate)
        return -value;
    else
        return value;
}

float Cos2(u16 angle){
    return Sin2(angle + 90);
}

#endif // GUARD_GBA_MATH_H